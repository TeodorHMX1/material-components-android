buildscript {
  ext.kotlinVersion = '1.3.50'
  repositories {
    google()
    jcenter()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:4.0.1'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
  }
}

allprojects {
  repositories {
    google()
    jcenter()
    mavenLocal()
  }
}

ext {
  compileSdkVersion = 29
  minSdkVersion = 14
  targetSdkVersion = 28

  androidXVersions = [
    annotation            : '1.0.1',
    appCompat             : '1.1.0',
    cardView              : '1.0.0',
    constraintlayout      : '1.1.3',
    coordinatorlayout     : '1.1.0',
    core                  : '1.2.0',
    experimental          : '1.0.0',
    fragment              : '1.0.0',
    lifecycle             : '2.0.0',
    recyclerView          : '1.0.0',
    recyclerViewSelection : '1.0.0',
    transition            : '1.2.0',
    vectorDrawable        : '1.1.0',
    viewpager2            : '1.0.0',
  ]

  testRunnerVersion = '1.1.0'
  espressoVersion = '3.1.0'
  mockitoCoreVersion = '2.25.0'
  truthVersion = '0.45'

  // Enforce the use of prebuilt dependencies in all sub-projects. This is
  // required for the doclava dependency.
  usePrebuilts = "true"

  // Disable pre-dexing when gradle called with -PdisablePreDex;
  preDexLibs = !project.hasProperty('disablePreDex')
}

// lint every library
task lint {
  doLast {
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

/**
 * Return the module dependency for the given compatibility library name.
 */
def compatibility(name) {
  switch (name) {
    case "annotation":
      return "androidx.annotation:annotation:${androidXVersions.annotation}"
    case "appcompat":
      return "androidx.appcompat:appcompat:${androidXVersions.appCompat}"
    case "cardview":
      return "androidx.cardview:cardview:${androidXVersions.cardView}"
    case "constraintlayout":
      return "androidx.constraintlayout:constraintlayout:${androidXVersions.constraintlayout}"
    case "coordinatorlayout":
      return "androidx.coordinatorlayout:coordinatorlayout:${androidXVersions.coordinatorlayout}"
    case "core":
      return "androidx.core:core:${androidXVersions.core}"
    case "fragment":
      return "androidx.fragment:fragment:${androidXVersions.fragment}"
    case "lifecycleRuntime":
      return "androidx.lifecycle:lifecycle-runtime:${androidXVersions.lifecycle}"
    case "recyclerview":
      return "androidx.recyclerview:recyclerview:${androidXVersions.recyclerView}"
    case "transition":
      return "androidx.transition:transition:${androidXVersions.transition}"
    case "vectordrawable":
      return "androidx.vectordrawable:vectordrawable:${androidXVersions.vectorDrawable}"
    case "recyclerViewSelection":
      return "androidx.recyclerview:recyclerview-selection:${androidXVersions.recyclerViewSelection}"
    case "viewpager2":
      return "androidx.viewpager2:viewpager2:${androidXVersions.viewpager2}"
    case "experimental":
      return "androidx.annotation:annotation-experimental:${androidXVersions.experimental}"
    default:
      throw new IllegalArgumentException("No mapping exists for name: $name.")
  }
}
